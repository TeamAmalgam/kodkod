#! /usr/bin/env python
# encoding: utf-8
import os.path
import waflib.Context
from waflib.Build import BuildContext, CleanContext, InstallContext, UninstallContext

variants = [ 'cryptominisat-2.9.1', 'lingeling-276-6264d55-100731', 'minisat-2.2.0', 'minisat-1.14', 'minisat-p_v1.14', 'zchaff-mincost' ]

def options(opt):
    opt.recurse(variants)       # set options for all solvers

def configure(conf):
    conf.env.LIBDIR = ''
    conf.env.BINDIR = ''
    conf.env.PREFIX = ''
    if len(conf.options.destdir) == 0 :
        conf.options.destdir = repr(conf.path.make_node('lib'))
        
    env = conf.env
    for solver in variants:     # create configuration environments for all solvers
        conf.setenv(solver, env)
        conf.recurse(solver)
    
def build(bld):
    if not bld.variant:         # no solver specified, build all
        import waflib.Options
	for x in variants: 
            waflib.Options.commands.insert(0, bld.cmd + '_' + x)
    else :                      # build the specifed solver
        bld.recurse(bld.variant)


for x in variants:
    for y in (BuildContext, CleanContext, InstallContext, UninstallContext):
        name = y.__name__.replace('Context','').lower()
        class tmp(y): 
            cmd = name + '_' + x
            variant = x
